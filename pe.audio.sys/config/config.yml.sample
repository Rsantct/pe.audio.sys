sample_rate:       44100 

# ===================== ALSAMIXER VOLUME CONTROL (OPTIONAL) ====================

# You need to investigate 'alsamixer' and 'amixer' command line tools
#     'control':   the simple mixer control identifier that you want to use
#     'limits':    the limit values as per shown by the 'amixer' tool (min, max)
#     'zeros':     the values that defines your 0 dB settintg FOR EACH CHANNEL (list of values)
#     'step_dB':   the fraction of dB corresponding to each value change

alsamixer:
    use_alsamixer:  false
    control:        PCM
    limits:         0, 191
    zeros:          128, 128         # Here the 0 dB == 128 == 67%
    step_dB:        0.5

# ===========================  JACK CONFIGURATION ==============================

jack:

    # 'silent' will disable Xrun printouts, set to 'false' if you want to monitor Xruns
    silent:     false

    # - Do not configure here the sampling rate, see the above global parameter
    # - nperiods normally set to 2, or 3 for serial interfaces (usb, firewire)
    # - miscel parameters examples:
    #     miscel: --shorts    # for 16 bit depth
    #     miscel: -P 8 -C 2   # simmulates 8 out x 2 in channels for DUMMY backend
    #     miscel: -P -o 4     # open 4 only playback channels from the available ones in the ALSA sound card

    # The optional "DUMMY" testing backend
    # backend:   dummy
    # miscel:    -P8 -C2

    # The optional "FIREWIRE" backend (see doc/Firewire)
    # backend:    firewire
    # device:     guid:0x00130e01000406d2
    # period:     1024
    # nperiods:   3
    # miscel:

    # The most common "ALSA" backend (see your device name running aplay -l)
    backend:    alsa
    device:     hw:USB,0
    period:     1024
    nperiods:   2
    miscel:

    # Additional cards to be used in jack by resampling,
    # either as capture or as playback devices.
    # Resampling quality: 0..4 for alsa_in/out or auto|16..96 for zita-a2j/j2a
    external_cards:

    #   sintax:
    #   <descriptor_name>  will be used to name the belonging jack ports
    #       device:        <hw:ALSANAME>
    #       resampler:     <zita-a2j | zita-j2a | alsa_in | alsa_out>
    #       resamplingQ:   <NN> | auto (zita)
    #       misc_params:   <.....>
    #
    #
    #   example: a usb device for capture
    #
    #   LineIN:
    #       device:        hw:USBCODEC,0
    #       resampler:     zita-a2j
    #       resamplingQ:   auto
    #       misc_params:   -p 1024 -r 48000 -n 3
    #
    #   example: a usb device for signal monitoring
    #
    #   external_monitor:
    #       device:        hw:CODEC
    #       resampler:     zita-j2a
    #       resamplingQ:   48
    #       misc_params:


# =========================  LIMITS  ===========================================

# Max balance setting authorised
balance_max:   6.0

# Max gain authorised at convolver output
gain_max:    0.0

# Equal loudness curves ceiled above the reference SPL
eq_loud_ceil: true

# Should Brutefir EQ stage to be linear phase?
bfeq_linear_phase: false


# ========================== THE LOUDSPEAKER  ==================================

# Put here your loudspeaker folder name
loudspeaker: full_range_example

# Estimated perceived reference SPL at listening point
refSPL:         83

# Gain dBFS at convolver output to obtain the reference SPL (level = 0.0):
ref_level_gain: -10.0


# ========================= STARTUP BEHAVIOR: ==================================
# (i) Leave blank these fields to restore from the last state,
#     or indicate a value to force.
#     Use quotes for string type options (midside, solo, input).

on_init:

    # Put here the common IDSTRING that identifies the XO FIR filters at start up.
    # ie: xo.lo.IDSTRING.pcm  xo.hi.IDSTRING.pcm
    xo:     # leave blank for a fullrange loudspeaker

    # Put here the IDSTRING that identifies the DRC FIR filters at start up.
    # ie: drc.L.IDSTRING.pcm  drc.R.IDSTRING.pcm
    drc:    sample

    # Put here just a target <ID> w/o the filename suffix 'ID_target_mag.dat'
    target: B&K

    # Others settings: (if any max_level will override level)
    level:
    max_level:          -20
    muted:              false
    bass:               0
    treble:             0
    balance:            0
    equal_loudness:     true
    lu_offset:          6.0     # most records suffers loudness war mastering
    midside:            'off'
    polarity:           '++'
    solo:               'off'
    input:              'none'

# Optional user macro at startup
run_macro:              '7_mpd_play_mylist'


# =================== BEHAVIOR WHEN CHANGE INPUT:  =============================
# (i) This is intended to forget or keep some of your runtime settings (tone, etc)
#     after you select a new music source.
#     Leave blank these fields to keep or indicate a value to forget.
#     Use quotes for string type options (midside and solo).

on_change_input:
    bass:               0.0
    treble:             0.0
    equal_loudness:     true
    lu_offset:          6.0     # most records suffers loudness war mastering
    midside:            'off'
    solo:               'off'


# ============================  SOURCES  =======================================
# (i)
#     - If 'jack_pname's here are named 'xxxxloop', then the preamp will
#       automagically spawn them for the sources can connect into. Obviously the
#       sources must be configured accordingly. This applies for MPD and ALSA players.
#
#     - xo, drc fields are optional, you may want minimum phase FIRs for video.
#
#     - lu_offset field is optional and overrides the on_change_input behavior.
#
#     - A remote peaudiosys system can be defined as source, see documentation.


sources:

    spotify:
        jack_pname:     librespot_loop
        gain:           0.0
        xo:

    mpd:
        jack_pname:     mpd_loop            # (i) same in ~/.mpdconf
        gain:           0.0
        xo:

    cd:
        gain:           0.0
        jack_pname:     mpd_loop
        lu_offset:      3.0
        xo:

    url:
        gain:           0.0
        jack_pname:     mpd_loop
        xo:

    dvb:
        jack_pname:     mplayer_dvb         # (i) same in ~/.mplayer/config
        gain:           0.0
        xo:

    tv:
        jack_pname:     system
        gain:           +6.0                # low level source
        xo:                                 # min-pha if available for low latency
        target:         none                # maybe preferred for movie dialogue

    remoteLivingRoom:
        jack_pname:     192.168.1.234       # remote pe.audio.sys IP (see documentation)
        gain:           0.0
        xo:


# ========================== SOURCE MONITOR PORTS ==============================
# The source selector will connect the source also here.
# If an external card is used, then the <monitorName> must match the
# <descriptor_name> usen in the above <external_cards:> section.

source_monitors:

    # - external_monitor

# ================ PLUGINS YOU WANT TO RUN (players, etc...)  ==================
# The scripts files are located under the share/plugins folder.
# Files must be executable, also must accept 'start' and 'stop' as
# command line argument in order to be launched and stopped at system startup.
#
# Look inside the file of the plugin you want to activate to find out more about it.
#


plugins:

    ## Brutefir peak monitor (this should never occur, see plugin details)
    - peak_monitor.py

    ## IR remote receiver
    #- ir.py

    ## Ecasound PEQ. '____.peq' file should be located in your loudspeaker folder
    #- ecasound_peq.py: ____.peq

    ## Restore sound cards mixer settings:
    - sound_cards_prepare.py

    ## Runs MPD:
    #- mpd.py

    ## Set Pulseaudio apps to sound through by JACK (Do NOT use with PipeWire):
    #- pulseaudio-jack-sink.py

    ## DVB-T player based on Mplayer, useful for DVB-T radio stations:
    #- DVB-T.py

    ## A daemon to autoplay a CD-Audio when inserted
    #- autoplay_cdda.py

    ## A daemon to auto eject a CD-Audio when playback is over
    #- autoeject_cdda.py

    ## librespot (a headless Spotify Connect player daemon)
    #- librespot.py

    ## A Spotify Desktop launcher and monitor
    - spotify_desktop.py

    ## Plays audio streamed from AirPlay sources
    #- shairport-sync.py

    ## Controls the volume by a mouse
    #- mouse_volume_daemon.py

    ## A daemon that monitorizes the EBU R128 LU-I Loudness Integrated
    - loudness_monitor.py

    ## The LCDd server and lcd_daemon.py
    #- lcd.py

    ## Power amp control
    #- power_amp_control.py


# ========================= MISCEL CONFIGURATIONS ==============================

# Set _address to 'localhost', or set '0.0.0.0' if you want to listen outside
peaudiosys_address:     localhost
peaudiosys_port:        9990

# Optional zita-njbridge multiroom remote sources
zita_udp_base:          65000
zita_buffer_ms:         50

# CD-ROM device
cdrom_device:  /dev/cdrom

# Configure here your command line script to SWITCH ON/OFF your AMPLIFIER.
# (i) It is expected that the script will store the amplifier state
#         'on'|'1'    or    'off'|'0'
#     into the file '~/.amplifier' so that others processes could know about.
amp_manager:                       # for instance: /home/pi/bin/amp_on_off.py

# Amplifier switch off will stop the current player:
amp_off_stops_player: true

# Amplifier switch off will turn off the computer:
amp_off_shutdown: false

# A watchdog for an external USB DAC with standby mode to start/stop pe.audio.sys
usb_dac_watchdog: false

# Control web page behavior
web_config:
    # hide the LU offset slider and the LU monitor bar
    hide_LU: false
    # display EQ and DRC graphs
    show_graphs: true
    # the main selector can manage 'inputs' or 'macros':
    main_selector: 'inputs'


# The scope ('input', 'album' or 'track') to trigger to reset the measured LU
# from the optional loudness_monitor.py plugin. Can be modified in runtime.
LU_reset_scope: album

# Powersave: stops/starts Brutefir as per the monitored signal level.
powersave:              false
powersave_noise_floor: -70
powersave_minutes:      10  # Time in minutes before shutting down Brutefir

# An optional compressor for movies (needs CamillaDSP with JACK backend)
use_compressor: false

# =========================   AUTO UPDATE (BETA)   ==============================
# Will add a crontab job in order to auto update from AudioHumLab master branch,
# every day late at night (see crontab -l)
auto_update:   false
